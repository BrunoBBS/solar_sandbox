[gd_resource type="ShaderMaterial" load_steps=16 format=2]

[ext_resource path="res://textures/noise_texture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 0.6 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 0.001 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=5]
output_port_for_preview = 0
function = 0

[sub_resource type="VisualShaderNodeInput" id=6]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=7]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 9

[sub_resource type="VisualShaderNodeInput" id=8]
output_port_for_preview = 0
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
output_port_for_preview = 0
function = 1

[sub_resource type="VisualShaderNodeTexture" id=10]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=11]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=12]

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
output_port_for_preview = 0
function = 1

[sub_resource type="VisualShader" id=14]
code = "shader_type spatial;
render_mode blend_mul;

uniform sampler2D tex_frg_5;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Input:3
	float n_out3p0 = TIME;

// ScalarOp:13
	float n_in13p1 = 0.00100;
	float n_out13p0 = n_out3p0 * n_in13p1;

// ScalarFunc:4
	float n_out4p0 = cos(n_out13p0);

// VectorOp:8
	vec3 n_out8p0 = n_out2p0 + vec3(n_out4p0);

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, n_out8p0.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// ScalarOp:12
	float n_in12p1 = 0.60000;
	float n_out12p0 = n_out3p0 * n_in12p1;

// ScalarFunc:19
	float n_out19p0 = sin(n_out12p0);

// ScalarFunc:9
	float n_out9p0 = cos(n_out19p0);

// ScalarOp:10
	float n_in10p1 = 2.00000;
	float n_out10p0 = n_out9p0 / n_in10p1;

// ScalarOp:11
	float n_in11p1 = 0.50000;
	float n_out11p0 = n_out10p0 + n_in11p1;

// VectorOp:6
	vec3 n_out6p0 = n_out5p0 * vec3(n_out11p0);

// ScalarOp:22
	float n_in22p1 = 0.50000;
	float n_out22p0 = step(dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333)), n_in22p1);

// Output:0
	EMISSION = vec3(n_out22p0);

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -473.333, -246.333 )
modes/blend = 3
nodes/fragment/0/position = Vector2( 1060, -40 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -720, -120 )
nodes/fragment/3/node = SubResource( 8 )
nodes/fragment/3/position = Vector2( -720, 220 )
nodes/fragment/4/node = SubResource( 9 )
nodes/fragment/4/position = Vector2( -220, 80 )
nodes/fragment/5/node = SubResource( 10 )
nodes/fragment/5/position = Vector2( 260, -220 )
nodes/fragment/6/node = SubResource( 11 )
nodes/fragment/6/position = Vector2( 580, -160 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( 20, -100 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( -80, 320 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 120, 200 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 320, 180 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -500, 320 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -460, 80 )
nodes/fragment/19/node = SubResource( 5 )
nodes/fragment/19/position = Vector2( -280, 300 )
nodes/fragment/22/node = SubResource( 7 )
nodes/fragment/22/position = Vector2( 840, -60 )
nodes/fragment/connections = PoolIntArray( 5, 0, 6, 0, 2, 0, 8, 0, 4, 0, 8, 1, 8, 0, 5, 0, 3, 0, 12, 0, 13, 0, 4, 0, 3, 0, 13, 0, 12, 0, 19, 0, 19, 0, 9, 0, 9, 0, 10, 0, 10, 0, 11, 0, 11, 0, 6, 1, 6, 0, 22, 0, 22, 0, 0, 5 )

[resource]
shader = SubResource( 14 )
